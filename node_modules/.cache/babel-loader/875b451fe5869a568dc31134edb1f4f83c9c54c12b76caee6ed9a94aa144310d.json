{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\deepblue\\\\src\\\\components\\\\Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001', {\n  transports: ['websocket', 'polling'],\n  reconnectionAttempts: 5\n});\nconst Whiteboard = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    socket.on('draw-line', receivedLines => {\n      setLines(receivedLines);\n    });\n    return () => {\n      socket.off('draw-line');\n    };\n  }, []);\n  const handleTouchStart = e => {\n    e.evt.preventDefault();\n    const pos = e.target.getStage().getPointerPosition();\n    setIsDrawing(true);\n    const newLines = [...lines, {\n      points: [pos.x, pos.y]\n    }];\n    setLines(newLines);\n    socket.emit('draw-line', newLines);\n  };\n  const handleTouchMove = e => {\n    e.evt.preventDefault();\n    if (!isDrawing) return;\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const lastLine = lines[lines.length - 1];\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n    const newLines = [...lines.slice(0, -1), lastLine];\n    setLines(newLines);\n    socket.emit('draw-line', newLines);\n  };\n  const handleMouseDown = e => {\n    const pos = e.target.getStage().getPointerPosition();\n    setIsDrawing(true);\n    const newLines = [...lines, {\n      points: [pos.x, pos.y]\n    }];\n    setLines(newLines);\n    socket.emit('draw-line', newLines);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const lastLine = lines[lines.length - 1];\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n    const newLines = [...lines.slice(0, -1), lastLine];\n    setLines(newLines);\n    socket.emit('draw-line', newLines);\n  };\n  const handleEnd = () => {\n    setIsDrawing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleEnd,\n    onMouseLeave: handleEnd,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleEnd,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n        points: line.points,\n        stroke: \"#000000\",\n        strokeWidth: 5,\n        tension: 0.5,\n        lineCap: \"round\",\n        lineJoin: \"round\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"KEKpI6kIGOZ/+mrFJ0tTdALn1zU=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useEffect","Stage","Layer","Line","io","jsxDEV","_jsxDEV","socket","transports","reconnectionAttempts","Whiteboard","_s","lines","setLines","isDrawing","setIsDrawing","on","receivedLines","off","handleTouchStart","e","evt","preventDefault","pos","target","getStage","getPointerPosition","newLines","points","x","y","emit","handleTouchMove","stage","point","lastLine","length","concat","slice","handleMouseDown","handleMouseMove","handleEnd","width","window","innerWidth","height","innerHeight","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","children","map","line","i","stroke","strokeWidth","tension","lineCap","lineJoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/deepblue/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Stage, Layer, Line } from 'react-konva';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:3001', {\r\n  transports: ['websocket', 'polling'],\r\n  reconnectionAttempts: 5\r\n});\r\n\r\nconst Whiteboard = () => {\r\n  const [lines, setLines] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on('draw-line', (receivedLines) => {\r\n      setLines(receivedLines);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('draw-line');\r\n    };\r\n  }, []);\r\n\r\n  const handleTouchStart = (e) => {\r\n    e.evt.preventDefault();\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setIsDrawing(true);\r\n    const newLines = [...lines, { points: [pos.x, pos.y] }];\r\n    setLines(newLines);\r\n    socket.emit('draw-line', newLines);\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    e.evt.preventDefault();\r\n    if (!isDrawing) return;\r\n\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n    const lastLine = lines[lines.length - 1];\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n    const newLines = [...lines.slice(0, -1), lastLine];\r\n    setLines(newLines);\r\n    socket.emit('draw-line', newLines);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setIsDrawing(true);\r\n    const newLines = [...lines, { points: [pos.x, pos.y] }];\r\n    setLines(newLines);\r\n    socket.emit('draw-line', newLines);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n    const lastLine = lines[lines.length - 1];\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n    const newLines = [...lines.slice(0, -1), lastLine];\r\n    setLines(newLines);\r\n    socket.emit('draw-line', newLines);\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  return (\r\n    <Stage\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleEnd}\r\n      onMouseLeave={handleEnd}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      onTouchEnd={handleEnd}\r\n    >\r\n      <Layer>\r\n        {lines.map((line, i) => (\r\n          <Line\r\n            key={i}\r\n            points={line.points}\r\n            stroke=\"#000000\"\r\n            strokeWidth={5}\r\n            tension={0.5}\r\n            lineCap=\"round\"\r\n            lineJoin=\"round\"\r\n          />\r\n        ))}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Whiteboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}