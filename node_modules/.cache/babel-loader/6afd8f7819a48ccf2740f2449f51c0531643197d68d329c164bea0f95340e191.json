{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\deepblue\\\\src\\\\components\\\\Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Circle, Image, Layer, Line, Rect, Stage, Transformer } from 'react-konva';\nimport io from 'socket.io-client';\n// Fix import paths to be within src directory\nimport circleIcon from '../assets/icons/circle.png';\nimport clearIcon from '../assets/icons/clear.png';\nimport eraserIcon from '../assets/icons/eraser.png';\nimport imageIcon from '../assets/icons/image.png';\nimport lineIcon from '../assets/icons/line.png';\nimport penIcon from '../assets/icons/pen.png';\nimport rectangleIcon from '../assets/icons/rectangle.png';\nimport selectIcon from '../assets/icons/select.png';\n// Add logo import\nimport logo from '../assets/logo/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://192.168.31.158:3001', {\n  transports: ['websocket', 'polling'],\n  reconnectionDelay: 1000,\n  reconnectionAttempts: 10,\n  forceNew: true\n});\nconst Whiteboard = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const [shapes, setShapes] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [tool, setTool] = useState('pen');\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedColor, setSelectedColor] = useState('#000000');\n  const [selectedStrokeWidth, setSelectedStrokeWidth] = useState(5);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [showStrokePicker, setShowStrokePicker] = useState(false);\n  const transformerRef = useRef();\n  const stageRef = useRef();\n  // Add state for logo\n  const [logoImage] = useState(new window.Image());\n  const colors = ['#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF', '#800000', '#008000', '#000080', '#808000', '#800080', '#008080', '#808080', '#C0C0C0', '#FFFFFF'];\n  useEffect(() => {\n    socket.on('draw-update', ({\n      lines,\n      shapes\n    }) => {\n      setLines(lines);\n      setShapes(shapes);\n    });\n    return () => {\n      socket.off('draw-update');\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedId) {\n      const shape = shapes.find(s => s.id === selectedId);\n      if (shape && transformerRef.current) {\n        transformerRef.current.nodes([stageRef.current.findOne('#' + selectedId)]);\n        transformerRef.current.getLayer().batchDraw();\n      }\n    }\n  }, [selectedId, shapes]);\n\n  // Add useEffect for logo loading\n  useEffect(() => {\n    logoImage.src = logo;\n  }, [logoImage]);\n  const handleMouseDown = e => {\n    let pos;\n    if (e.type === 'touchstart') {\n      var _e$evt, _e$evt$touches;\n      // Check if e.evt exists (Konva wraps the native event in e.evt)\n      if (e.evt) {\n        e.evt.preventDefault();\n      }\n\n      // Get touch position from Konva's wrapped event\n      const touch = (_e$evt = e.evt) === null || _e$evt === void 0 ? void 0 : (_e$evt$touches = _e$evt.touches) === null || _e$evt$touches === void 0 ? void 0 : _e$evt$touches[0];\n      if (touch) {\n        const stage = e.target.getStage();\n        pos = stage.getPointerPosition();\n        if (!pos && stage.container()) {\n          pos = {\n            x: touch.clientX - stage.container().offsetLeft,\n            y: touch.clientY - stage.container().offsetTop\n          };\n        }\n      }\n    } else {\n      pos = e.target.getStage().getPointerPosition();\n    }\n    if (!pos) return;\n    setIsDrawing(true);\n    setStartPos(pos);\n    if (tool === 'pen') {\n      const newLines = [...lines, {\n        tool,\n        points: [pos.x, pos.y],\n        color: selectedColor,\n        strokeWidth: selectedStrokeWidth,\n        tension: 0.4,\n        lineCap: 'round',\n        lineJoin: 'round'\n      }];\n      setLines(newLines);\n      socket.emit('draw-update', {\n        lines: newLines,\n        shapes\n      });\n    }\n    // ...rest of your existing code...\n    else if (tool === 'eraser') {\n      const newLines = [...lines, {\n        tool,\n        points: [pos.x, pos.y],\n        color: '#ffffff',\n        strokeWidth: 20\n      }];\n      setLines(newLines);\n      socket.emit('draw-update', {\n        lines: newLines,\n        shapes\n      });\n    } else if (tool === 'select') {\n      const clickedShape = e.target;\n      if (clickedShape === e.target.getStage()) {\n        setSelectedId(null);\n        return;\n      }\n      if (clickedShape.getParent().className === 'Transformer') {\n        return;\n      }\n      setSelectedId(clickedShape.id());\n    }\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    let point;\n    if (e.type === 'touchmove') {\n      var _e$evt2, _e$evt2$touches;\n      // Check if e.evt exists (Konva wraps the native event in e.evt)\n      if (e.evt) {\n        e.evt.preventDefault();\n      }\n\n      // Get touch position from Konva's wrapped event\n      const touch = (_e$evt2 = e.evt) === null || _e$evt2 === void 0 ? void 0 : (_e$evt2$touches = _e$evt2.touches) === null || _e$evt2$touches === void 0 ? void 0 : _e$evt2$touches[0];\n      if (touch) {\n        const stage = e.target.getStage();\n        point = stage.getPointerPosition();\n\n        // Fallback if getPointerPosition fails\n        if (!point && stage.container()) {\n          point = {\n            x: touch.clientX - stage.container().offsetLeft,\n            y: touch.clientY - stage.container().offsetTop\n          };\n        }\n      }\n    } else {\n      point = e.target.getStage().getPointerPosition();\n    }\n\n    // Guard against undefined position\n    if (!point) return;\n    if (tool === 'pen') {\n      const lastLine = lines[lines.length - 1];\n      if (!lastLine) return;\n      const newPoints = [...lastLine.points, point.x, point.y];\n      const newLines = [...lines.slice(0, -1), {\n        ...lastLine,\n        points: newPoints,\n        tension: 0.4,\n        strokeWidth: selectedStrokeWidth,\n        color: selectedColor\n      }];\n      setLines(newLines);\n      socket.emit('draw-update', {\n        lines: newLines,\n        shapes\n      });\n    }\n    // ...rest of your existing code...\n    else {\n      const point = e.target.getStage().getPointerPosition();\n      if (tool === 'pen') {\n        const lastLine = lines[lines.length - 1];\n        // Simple point addition without complex smoothing\n        lastLine.points = lastLine.points.concat([point.x, point.y]);\n        const newLines = [...lines.slice(0, -1), {\n          ...lastLine,\n          tension: 0.4,\n          strokeWidth: selectedStrokeWidth,\n          color: selectedColor\n        }];\n        setLines(newLines);\n        socket.emit('draw-update', {\n          lines: newLines,\n          shapes\n        });\n      } else {\n        const newShapes = [...shapes];\n        const index = newShapes.findIndex(s => s.id === 'temp');\n        const shapeData = {\n          id: 'temp',\n          type: tool,\n          x: startPos.x,\n          y: startPos.y,\n          width: point.x - startPos.x,\n          height: point.y - startPos.y,\n          color: selectedColor,\n          strokeWidth: selectedStrokeWidth\n        };\n        if (index === -1) {\n          newShapes.push(shapeData);\n        } else {\n          newShapes[index] = shapeData;\n        }\n        setShapes(newShapes);\n        socket.emit('draw-update', {\n          lines,\n          shapes: newShapes\n        });\n      }\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    if (['line', 'rectangle', 'circle'].includes(tool)) {\n      const newShapes = shapes.map(shape => shape.id === 'temp' ? {\n        ...shape,\n        id: Date.now().toString()\n      } : shape);\n      setShapes(newShapes);\n      socket.emit('draw-update', {\n        lines,\n        shapes: newShapes\n      });\n    }\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/')) {\n      alert('Please upload an image file');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      const tempCanvas = document.createElement('canvas');\n      const tempCtx = tempCanvas.getContext('2d');\n      const img = new window.Image();\n      img.onload = () => {\n        // Set fixed width of 300px and calculate height to maintain aspect ratio\n        const targetWidth = 300;\n        const aspectRatio = img.height / img.width;\n        const targetHeight = targetWidth * aspectRatio;\n\n        // Set canvas size and draw image\n        tempCanvas.width = targetWidth;\n        tempCanvas.height = targetHeight;\n        tempCtx.drawImage(img, 0, 0, targetWidth, targetHeight);\n        const processedImageData = tempCanvas.toDataURL('image/png');\n        const newShape = {\n          id: Date.now().toString(),\n          type: 'image',\n          x: window.innerWidth / 4,\n          y: window.innerHeight / 4,\n          width: targetWidth,\n          height: targetHeight,\n          image: processedImageData,\n          rotation: 0\n        };\n        const newShapes = [...shapes, newShape];\n        setShapes(newShapes);\n        socket.emit('draw-update', {\n          lines,\n          shapes: newShapes\n        });\n      };\n      img.src = reader.result;\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleDragEnd = e => {\n    const shape = e.target;\n    const newShapes = shapes.map(s => {\n      if (s.id === shape.id()) {\n        if (s.type === 'circle') {\n          return {\n            ...s,\n            x: shape.x() - s.width / 2,\n            y: shape.y() - s.height / 2\n          };\n        }\n        return {\n          ...s,\n          x: shape.x(),\n          y: shape.y()\n        };\n      }\n      return s;\n    });\n    setShapes(newShapes);\n    socket.emit('draw-update', {\n      lines,\n      shapes: newShapes\n    });\n  };\n  const handleTransformEnd = e => {\n    const node = e.target;\n    const scaleX = node.scaleX();\n    const scaleY = node.scaleY();\n    node.scaleX(1);\n    node.scaleY(1);\n    const newShapes = shapes.map(shape => shape.id === node.id() ? {\n      ...shape,\n      x: node.x(),\n      y: node.y(),\n      width: Math.abs(node.width() * scaleX),\n      height: Math.abs(node.height() * scaleY),\n      rotation: node.rotation()\n    } : shape);\n    setShapes(newShapes);\n    socket.emit('draw-update', {\n      lines,\n      shapes: newShapes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        left: 10,\n        top: '50%',\n        transform: 'translateY(-50%)',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '8px',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        padding: '10px',\n        borderRadius: '8px',\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('pen'),\n        style: {\n          padding: 8,\n          backgroundColor: 'transparent',\n          border: '1px solid #333',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '40px',\n          height: '40px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: penIcon,\n          alt: \"Pen\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('eraser'),\n        style: {/* same button style */},\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: eraserIcon,\n          alt: \"Eraser\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('line'),\n        style: {/* same button style */},\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: lineIcon,\n          alt: \"Line\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('rectangle'),\n        style: {/* same button style */},\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rectangleIcon,\n          alt: \"Rectangle\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('circle'),\n        style: {/* same button style */},\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: circleIcon,\n          alt: \"Circle\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('select'),\n        style: {/* same button style */},\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectIcon,\n          alt: \"Select\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowColorPicker(!showColorPicker),\n          style: {\n            backgroundColor: selectedColor,\n            width: '40px',\n            height: '40px',\n            border: '1px solid #333',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '100%',\n            left: '100%',\n            backgroundColor: 'white',\n            border: '1px solid #ccc',\n            padding: 5,\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4, 1fr)',\n            gap: 5,\n            zIndex: 2,\n            marginLeft: '10px'\n          },\n          children: colors.map((color, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 25,\n              height: 25,\n              backgroundColor: color,\n              cursor: 'pointer',\n              border: '1px solid #ccc'\n            },\n            onClick: () => {\n              setSelectedColor(color);\n              setShowColorPicker(false);\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowStrokePicker(!showStrokePicker),\n          style: {\n            width: '40px',\n            height: '40px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            border: '1px solid #333',\n            borderRadius: '4px',\n            backgroundColor: 'transparent',\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '80%',\n              height: selectedStrokeWidth,\n              backgroundColor: selectedColor,\n              margin: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), showStrokePicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '100%',\n            left: '100%',\n            backgroundColor: 'white',\n            border: '1px solid #ccc',\n            padding: 5,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 5,\n            zIndex: 2,\n            marginLeft: '10px'\n          },\n          children: [2, 4, 6, 8, 10, 12, 14, 16].map(width => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100px',\n              height: '20px',\n              cursor: 'pointer',\n              border: '1px solid #ccc',\n              display: 'flex',\n              alignItems: 'center',\n              padding: '0 5px'\n            },\n            onClick: () => {\n              setSelectedStrokeWidth(width);\n              setShowStrokePicker(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                height: width,\n                backgroundColor: selectedColor\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this)\n          }, width, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          style: {\n            width: '40px',\n            height: '40px',\n            opacity: 0,\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            cursor: 'pointer',\n            zIndex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: '40px',\n            height: '40px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            border: '1px solid #333',\n            borderRadius: '4px',\n            backgroundColor: 'transparent',\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageIcon,\n            alt: \"Upload Image\",\n            width: \"24\",\n            height: \"24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setLines([]);\n          setShapes([]);\n          socket.emit('draw-update', {\n            lines: [],\n            shapes: []\n          });\n        },\n        style: {\n          width: '40px',\n          height: '40px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '1px solid #333',\n          borderRadius: '4px',\n          backgroundColor: 'transparent',\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: clearIcon,\n          alt: \"Clear All\",\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      ref: stageRef,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onTouchStart: handleMouseDown,\n      onTouchMove: handleMouseMove,\n      onTouchEnd: handleMouseUp,\n      onContextMenu: e => e.evt.preventDefault(),\n      listening: true,\n      touchAction: \"none\",\n      style: {\n        touchAction: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          image: logoImage,\n          x: window.innerWidth - 110 // 10px padding from right edge\n          ,\n          y: 10,\n          width: 100,\n          height: 40,\n          opacity: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: line.color,\n          strokeWidth: line.strokeWidth,\n          tension: 0.4,\n          lineCap: \"round\",\n          lineJoin: \"round\",\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)), shapes.map(shape => {\n          if (shape.type === 'line') {\n            return /*#__PURE__*/_jsxDEV(Line, {\n              id: shape.id,\n              points: [shape.x, shape.y, shape.x + shape.width, shape.y + shape.height],\n              stroke: shape.color || selectedColor,\n              strokeWidth: shape.strokeWidth || selectedStrokeWidth,\n              draggable: tool === 'select',\n              onClick: () => setSelectedId(shape.id),\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this);\n          } else if (shape.type === 'rectangle') {\n            return /*#__PURE__*/_jsxDEV(Rect, {\n              id: shape.id,\n              x: shape.x,\n              y: shape.y,\n              width: shape.width,\n              height: shape.height,\n              rotation: shape.rotation,\n              stroke: shape.color || selectedColor,\n              strokeWidth: shape.strokeWidth || selectedStrokeWidth,\n              draggable: tool === 'select',\n              onClick: () => tool === 'select' && setSelectedId(shape.id),\n              onDragEnd: handleDragEnd,\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this);\n          } else if (shape.type === 'circle') {\n            return /*#__PURE__*/_jsxDEV(Circle, {\n              id: shape.id,\n              x: shape.x + shape.width / 2,\n              y: shape.y + shape.height / 2,\n              radius: Math.abs(shape.width) / 2,\n              stroke: shape.color || selectedColor,\n              strokeWidth: shape.strokeWidth || selectedStrokeWidth,\n              draggable: tool === 'select',\n              onClick: () => tool === 'select' && setSelectedId(shape.id),\n              onDragEnd: handleDragEnd,\n              onTransformEnd: handleTransformEnd,\n              rotation: shape.rotation\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this);\n          } else if (shape.type === 'image') {\n            const imageObj = new window.Image();\n            imageObj.crossOrigin = 'anonymous';\n            imageObj.src = shape.image;\n            return /*#__PURE__*/_jsxDEV(Image, {\n              id: shape.id,\n              image: imageObj,\n              x: shape.x,\n              y: shape.y,\n              width: shape.width,\n              height: shape.height,\n              rotation: shape.rotation,\n              draggable: tool === 'select',\n              onClick: () => tool === 'select' && setSelectedId(shape.id),\n              onDragEnd: handleDragEnd,\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        }), selectedId && tool === 'select' && /*#__PURE__*/_jsxDEV(Transformer, {\n          ref: transformerRef,\n          boundBoxFunc: (oldBox, newBox) => {\n            const isValid = newBox.width > 5 && newBox.height > 5;\n            return isValid ? newBox : oldBox;\n          },\n          rotationSnaps: [0, 45, 90, 135, 180, 225, 270, 315],\n          enabledAnchors: ['top-left', 'top-center', 'top-right', 'middle-left', 'middle-right', 'bottom-left', 'bottom-center', 'bottom-right'],\n          anchorSize: 8,\n          anchorCornerRadius: 4,\n          borderStroke: \"#00ff00\",\n          anchorStroke: \"#00ff00\",\n          anchorFill: \"#ffffff\",\n          padding: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"lnCZHwgbUIQekXOMvTrIni7slPo=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Circle","Image","Layer","Line","Rect","Stage","Transformer","io","circleIcon","clearIcon","eraserIcon","imageIcon","lineIcon","penIcon","rectangleIcon","selectIcon","logo","jsxDEV","_jsxDEV","socket","transports","reconnectionDelay","reconnectionAttempts","forceNew","Whiteboard","_s","lines","setLines","shapes","setShapes","selectedId","setSelectedId","tool","setTool","isDrawing","setIsDrawing","startPos","setStartPos","x","y","selectedColor","setSelectedColor","selectedStrokeWidth","setSelectedStrokeWidth","showColorPicker","setShowColorPicker","showStrokePicker","setShowStrokePicker","transformerRef","stageRef","logoImage","window","colors","on","off","shape","find","s","id","current","nodes","findOne","getLayer","batchDraw","src","handleMouseDown","e","pos","type","_e$evt","_e$evt$touches","evt","preventDefault","touch","touches","stage","target","getStage","getPointerPosition","container","clientX","offsetLeft","clientY","offsetTop","newLines","points","color","strokeWidth","tension","lineCap","lineJoin","emit","clickedShape","getParent","className","handleMouseMove","point","_e$evt2","_e$evt2$touches","lastLine","length","newPoints","slice","concat","newShapes","index","findIndex","shapeData","width","height","push","handleMouseUp","includes","map","Date","now","toString","handleImageUpload","file","files","startsWith","alert","reader","FileReader","onload","tempCanvas","document","createElement","tempCtx","getContext","img","targetWidth","aspectRatio","targetHeight","drawImage","processedImageData","toDataURL","newShape","innerWidth","innerHeight","image","rotation","result","readAsDataURL","handleDragEnd","handleTransformEnd","node","scaleX","scaleY","Math","abs","children","style","position","left","top","transform","display","flexDirection","gap","backgroundColor","padding","borderRadius","zIndex","onClick","border","cursor","alignItems","justifyContent","alt","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","marginLeft","i","margin","accept","onChange","opacity","ref","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","listening","touchAction","line","stroke","globalCompositeOperation","draggable","onTransformEnd","onDragEnd","radius","imageObj","crossOrigin","boundBoxFunc","oldBox","newBox","isValid","rotationSnaps","enabledAnchors","anchorSize","anchorCornerRadius","borderStroke","anchorStroke","anchorFill","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/deepblue/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Circle, Image, Layer, Line, Rect, Stage, Transformer } from 'react-konva';\r\nimport io from 'socket.io-client';\r\n// Fix import paths to be within src directory\r\nimport circleIcon from '../assets/icons/circle.png';\r\nimport clearIcon from '../assets/icons/clear.png';\r\nimport eraserIcon from '../assets/icons/eraser.png';\r\nimport imageIcon from '../assets/icons/image.png';\r\nimport lineIcon from '../assets/icons/line.png';\r\nimport penIcon from '../assets/icons/pen.png';\r\nimport rectangleIcon from '../assets/icons/rectangle.png';\r\nimport selectIcon from '../assets/icons/select.png';\r\n// Add logo import\r\nimport logo from '../assets/logo/logo.png';\r\n\r\nconst socket = io('http://192.168.31.158:3001', {\r\n  transports: ['websocket', 'polling'],\r\n  reconnectionDelay: 1000,\r\n  reconnectionAttempts: 10,\r\n  forceNew: true\r\n});\r\n\r\nconst Whiteboard = () => {\r\n  const [lines, setLines] = useState([]);\r\n  const [shapes, setShapes] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [tool, setTool] = useState('pen');\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [startPos, setStartPos] = useState({ x: 0, y: 0 });\r\n  const [selectedColor, setSelectedColor] = useState('#000000');\r\n  const [selectedStrokeWidth, setSelectedStrokeWidth] = useState(5);\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [showStrokePicker, setShowStrokePicker] = useState(false);\r\n  const transformerRef = useRef();\r\n  const stageRef = useRef();\r\n  // Add state for logo\r\n  const [logoImage] = useState(new window.Image());\r\n\r\n  const colors = [\r\n    '#000000', '#FF0000', '#00FF00', '#0000FF',\r\n    '#FFFF00', '#FF00FF', '#00FFFF', '#800000',\r\n    '#008000', '#000080', '#808000', '#800080',\r\n    '#008080', '#808080', '#C0C0C0', '#FFFFFF'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    socket.on('draw-update', ({ lines, shapes }) => {\r\n      setLines(lines);\r\n      setShapes(shapes);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('draw-update');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      const shape = shapes.find(s => s.id === selectedId);\r\n      if (shape && transformerRef.current) {\r\n        transformerRef.current.nodes([stageRef.current.findOne('#' + selectedId)]);\r\n        transformerRef.current.getLayer().batchDraw();\r\n      }\r\n    }\r\n  }, [selectedId, shapes]);\r\n\r\n  // Add useEffect for logo loading\r\n  useEffect(() => {\r\n    logoImage.src = logo;\r\n  }, [logoImage]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    let pos;\r\n    \r\n    if (e.type === 'touchstart') {\r\n      // Check if e.evt exists (Konva wraps the native event in e.evt)\r\n      if (e.evt) {\r\n        e.evt.preventDefault();\r\n      }\r\n      \r\n      // Get touch position from Konva's wrapped event\r\n      const touch = e.evt?.touches?.[0];\r\n      if (touch) {\r\n        const stage = e.target.getStage();\r\n        pos = stage.getPointerPosition();\r\n        \r\n        if (!pos && stage.container()) {\r\n          pos = {\r\n            x: touch.clientX - stage.container().offsetLeft,\r\n            y: touch.clientY - stage.container().offsetTop\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pos = e.target.getStage().getPointerPosition();\r\n    }\r\n  \r\n    if (!pos) return;\r\n    \r\n    setIsDrawing(true);\r\n    setStartPos(pos);\r\n  \r\n    if (tool === 'pen') {\r\n      const newLines = [...lines, { \r\n        tool,\r\n        points: [pos.x, pos.y],\r\n        color: selectedColor,\r\n        strokeWidth: selectedStrokeWidth,\r\n        tension: 0.4,\r\n        lineCap: 'round',\r\n        lineJoin: 'round'\r\n      }];\r\n      setLines(newLines);\r\n      socket.emit('draw-update', { lines: newLines, shapes });\r\n    }\r\n    // ...rest of your existing code...\r\n    else if (tool === 'eraser') {\r\n      const newLines = [...lines, { \r\n        tool, \r\n        points: [pos.x, pos.y],\r\n        color: '#ffffff',\r\n        strokeWidth: 20 \r\n      }];\r\n      setLines(newLines);\r\n      socket.emit('draw-update', { lines: newLines, shapes });\r\n    } else if (tool === 'select') {\r\n      const clickedShape = e.target;\r\n      if (clickedShape === e.target.getStage()) {\r\n        setSelectedId(null);\r\n        return;\r\n      }\r\n      if (clickedShape.getParent().className === 'Transformer') {\r\n        return;\r\n      }\r\n      setSelectedId(clickedShape.id());\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    let point;\r\n\r\n    if (e.type === 'touchmove') {\r\n      // Check if e.evt exists (Konva wraps the native event in e.evt)\r\n      if (e.evt) {\r\n        e.evt.preventDefault();\r\n      }\r\n      \r\n      // Get touch position from Konva's wrapped event\r\n      const touch = e.evt?.touches?.[0];\r\n      if (touch) {\r\n        const stage = e.target.getStage();\r\n        point = stage.getPointerPosition();\r\n        \r\n        // Fallback if getPointerPosition fails\r\n        if (!point && stage.container()) {\r\n          point = {\r\n            x: touch.clientX - stage.container().offsetLeft,\r\n            y: touch.clientY - stage.container().offsetTop\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      point = e.target.getStage().getPointerPosition();\r\n    }\r\n  \r\n    // Guard against undefined position\r\n    if (!point) return;\r\n  \r\n    if (tool === 'pen') {\r\n      const lastLine = lines[lines.length - 1];\r\n      if (!lastLine) return;\r\n  \r\n      const newPoints = [...lastLine.points, point.x, point.y];\r\n      \r\n      const newLines = [...lines.slice(0, -1), {\r\n        ...lastLine,\r\n        points: newPoints,\r\n        tension: 0.4,\r\n        strokeWidth: selectedStrokeWidth,\r\n        color: selectedColor\r\n      }];\r\n  \r\n      setLines(newLines);\r\n      socket.emit('draw-update', { lines: newLines, shapes });\r\n    }\r\n    // ...rest of your existing code...\r\n    else {\r\n      const point = e.target.getStage().getPointerPosition();\r\n      if (tool === 'pen') {\r\n        const lastLine = lines[lines.length - 1];\r\n        // Simple point addition without complex smoothing\r\n        lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n\r\n        const newLines = [...lines.slice(0, -1), {\r\n          ...lastLine,\r\n          tension: 0.4,\r\n          strokeWidth: selectedStrokeWidth,\r\n          color: selectedColor\r\n        }];\r\n\r\n        setLines(newLines);\r\n        socket.emit('draw-update', { lines: newLines, shapes });\r\n      } else {\r\n        const newShapes = [...shapes];\r\n        const index = newShapes.findIndex(s => s.id === 'temp');\r\n        const shapeData = {\r\n          id: 'temp',\r\n          type: tool,\r\n          x: startPos.x,\r\n          y: startPos.y,\r\n          width: point.x - startPos.x,\r\n          height: point.y - startPos.y,\r\n          color: selectedColor,\r\n          strokeWidth: selectedStrokeWidth\r\n        };\r\n        \r\n        if (index === -1) {\r\n          newShapes.push(shapeData);\r\n        } else {\r\n          newShapes[index] = shapeData;\r\n        }\r\n        setShapes(newShapes);\r\n        socket.emit('draw-update', { lines, shapes: newShapes });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n    if (['line', 'rectangle', 'circle'].includes(tool)) {\r\n      const newShapes = shapes.map(shape => \r\n        shape.id === 'temp' ? { ...shape, id: Date.now().toString() } : shape\r\n      );\r\n      setShapes(newShapes);\r\n      socket.emit('draw-update', { lines, shapes: newShapes });\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n  \r\n    if (!file.type.startsWith('image/')) {\r\n      alert('Please upload an image file');\r\n      return;\r\n    }\r\n  \r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const tempCanvas = document.createElement('canvas');\r\n      const tempCtx = tempCanvas.getContext('2d');\r\n      const img = new window.Image();\r\n      \r\n      img.onload = () => {\r\n        // Set fixed width of 300px and calculate height to maintain aspect ratio\r\n        const targetWidth = 300;\r\n        const aspectRatio = img.height / img.width;\r\n        const targetHeight = targetWidth * aspectRatio;\r\n  \r\n        // Set canvas size and draw image\r\n        tempCanvas.width = targetWidth;\r\n        tempCanvas.height = targetHeight;\r\n        tempCtx.drawImage(img, 0, 0, targetWidth, targetHeight);\r\n        \r\n        const processedImageData = tempCanvas.toDataURL('image/png');\r\n  \r\n        const newShape = {\r\n          id: Date.now().toString(),\r\n          type: 'image',\r\n          x: window.innerWidth / 4,\r\n          y: window.innerHeight / 4,\r\n          width: targetWidth,\r\n          height: targetHeight,\r\n          image: processedImageData,\r\n          rotation: 0,\r\n        };\r\n  \r\n        const newShapes = [...shapes, newShape];\r\n        setShapes(newShapes);\r\n        socket.emit('draw-update', { lines, shapes: newShapes });\r\n      };\r\n      img.src = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    const shape = e.target;\r\n    const newShapes = shapes.map(s => {\r\n      if (s.id === shape.id()) {\r\n        if (s.type === 'circle') {\r\n          return {\r\n            ...s,\r\n            x: shape.x() - s.width / 2,\r\n            y: shape.y() - s.height / 2\r\n          };\r\n        }\r\n        return {\r\n          ...s,\r\n          x: shape.x(),\r\n          y: shape.y()\r\n        };\r\n      }\r\n      return s;\r\n    });\r\n    setShapes(newShapes);\r\n    socket.emit('draw-update', { lines, shapes: newShapes });\r\n  };\r\n\r\n  const handleTransformEnd = (e) => {\r\n    const node = e.target;\r\n    const scaleX = node.scaleX();\r\n    const scaleY = node.scaleY();\r\n    \r\n    node.scaleX(1);\r\n    node.scaleY(1);\r\n    \r\n    const newShapes = shapes.map(shape => \r\n      shape.id === node.id() ? {\r\n        ...shape,\r\n        x: node.x(),\r\n        y: node.y(),\r\n        width: Math.abs(node.width() * scaleX),\r\n        height: Math.abs(node.height() * scaleY),\r\n        rotation: node.rotation()\r\n      } : shape\r\n    );\r\n    setShapes(newShapes);\r\n    socket.emit('draw-update', { lines, shapes: newShapes });\r\n  };\r\n\r\n  return (\r\n    <div className=\"whiteboard-container\">\r\n      <div style={{ \r\n        position: 'fixed', \r\n        left: 10, \r\n        top: '50%', \r\n        transform: 'translateY(-50%)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '8px',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        padding: '10px',\r\n        borderRadius: '8px',\r\n        zIndex: 1,\r\n      }}>\r\n        <button \r\n          onClick={() => setTool('pen')} \r\n          style={{ \r\n            padding: 8,\r\n            backgroundColor: 'transparent',\r\n            border: '1px solid #333',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '40px',\r\n            height: '40px'\r\n          }}\r\n        >\r\n          <img src={penIcon} alt=\"Pen\" width=\"24\" height=\"24\" />\r\n        </button>\r\n        {/* Apply the same style to other tool buttons */}\r\n        <button onClick={() => setTool('eraser')} style={{ /* same button style */ }}>\r\n          <img src={eraserIcon} alt=\"Eraser\" width=\"24\" height=\"24\" />\r\n        </button>\r\n        <button onClick={() => setTool('line')} style={{ /* same button style */ }}>\r\n          <img src={lineIcon} alt=\"Line\" width=\"24\" height=\"24\" />\r\n        </button>\r\n        <button onClick={() => setTool('rectangle')} style={{ /* same button style */ }}>\r\n          <img src={rectangleIcon} alt=\"Rectangle\" width=\"24\" height=\"24\" />\r\n        </button>\r\n        <button onClick={() => setTool('circle')} style={{ /* same button style */ }}>\r\n          <img src={circleIcon} alt=\"Circle\" width=\"24\" height=\"24\" />\r\n        </button>\r\n        <button onClick={() => setTool('select')} style={{ /* same button style */ }}>\r\n          <img src={selectIcon} alt=\"Select\" width=\"24\" height=\"24\" />\r\n        </button>\r\n\r\n        {/* Color Picker */}\r\n        <div style={{ display: 'inline-block', position: 'relative' }}>\r\n          <button \r\n            onClick={() => setShowColorPicker(!showColorPicker)}\r\n            style={{ \r\n              backgroundColor: selectedColor, \r\n              width: '40px',\r\n              height: '40px',\r\n              border: '1px solid #333',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          />\r\n          {showColorPicker && (\r\n            <div style={{\r\n              position: 'absolute',\r\n              top: '100%',\r\n              left: '100%',\r\n              backgroundColor: 'white',\r\n              border: '1px solid #ccc',\r\n              padding: 5,\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(4, 1fr)',\r\n              gap: 5,\r\n              zIndex: 2,\r\n              marginLeft: '10px',\r\n            }}>\r\n              {colors.map((color, i) => (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    width: 25,\r\n                    height: 25,\r\n                    backgroundColor: color,\r\n                    cursor: 'pointer',\r\n                    border: '1px solid #ccc'\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelectedColor(color);\r\n                    setShowColorPicker(false);\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Stroke Width Picker */}\r\n        <div style={{ display: 'inline-block', position: 'relative' }}>\r\n          <button \r\n            onClick={() => setShowStrokePicker(!showStrokePicker)}\r\n            style={{ \r\n              width: '40px',\r\n              height: '40px',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              border: '1px solid #333',\r\n              borderRadius: '4px',\r\n              backgroundColor: 'transparent',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            <div style={{\r\n              width: '80%',\r\n              height: selectedStrokeWidth,\r\n              backgroundColor: selectedColor,\r\n              margin: 'auto'\r\n            }}/>\r\n          </button>\r\n          {showStrokePicker && (\r\n            <div style={{\r\n              position: 'absolute',\r\n              top: '100%',\r\n              left: '100%',\r\n              backgroundColor: 'white',\r\n              border: '1px solid #ccc',\r\n              padding: 5,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: 5,\r\n              zIndex: 2,\r\n              marginLeft: '10px',\r\n            }}>\r\n              {[2, 4, 6, 8, 10, 12, 14, 16].map((width) => (\r\n                <div\r\n                  key={width}\r\n                  style={{\r\n                    width: '100px',\r\n                    height: '20px',\r\n                    cursor: 'pointer',\r\n                    border: '1px solid #ccc',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    padding: '0 5px',\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelectedStrokeWidth(width);\r\n                    setShowStrokePicker(false);\r\n                  }}\r\n                >\r\n                  <div style={{\r\n                    width: '100%',\r\n                    height: width,\r\n                    backgroundColor: selectedColor,\r\n                  }}/>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Image Upload */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            onChange={handleImageUpload}\r\n            style={{ \r\n              width: '40px',\r\n              height: '40px',\r\n              opacity: 0,\r\n              position: 'absolute',\r\n              left: 0,\r\n              top: 0,\r\n              cursor: 'pointer',\r\n              zIndex: 1\r\n            }}\r\n          />\r\n          <button style={{ \r\n            width: '40px',\r\n            height: '40px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            border: '1px solid #333',\r\n            borderRadius: '4px',\r\n            backgroundColor: 'transparent',\r\n            cursor: 'pointer'\r\n          }}>\r\n            <img src={imageIcon} alt=\"Upload Image\" width=\"24\" height=\"24\" />\r\n          </button>\r\n        </div>\r\n\r\n        <button \r\n          onClick={() => {\r\n            setLines([]);\r\n            setShapes([]);\r\n            socket.emit('draw-update', { lines: [], shapes: [] });\r\n          }} \r\n          style={{ \r\n            width: '40px',\r\n            height: '40px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            border: '1px solid #333',\r\n            borderRadius: '4px',\r\n            backgroundColor: 'transparent',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          <img src={clearIcon} alt=\"Clear All\" width=\"24\" height=\"24\" />\r\n        </button>\r\n      </div>\r\n\r\n      <Stage\r\n        ref={stageRef}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onTouchMove={handleMouseMove}\r\n        onTouchEnd={handleMouseUp}\r\n        onContextMenu={e => e.evt.preventDefault()}\r\n        listening={true}\r\n        touchAction=\"none\"\r\n        style={{ touchAction: 'none' }}\r\n      >\r\n        <Layer>\r\n          {/* Move logo to right side */}\r\n          <Image\r\n            image={logoImage}\r\n            x={window.innerWidth - 110} // 10px padding from right edge\r\n            y={10}\r\n            width={100}\r\n            height={40}\r\n            opacity={1}\r\n          />\r\n          {lines.map((line, i) => (\r\n            <Line\r\n              key={i}\r\n              points={line.points}\r\n              stroke={line.color}\r\n              strokeWidth={line.strokeWidth}\r\n              tension={0.4}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n              globalCompositeOperation={\r\n                line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n          {/* Rest of the shapes rendering */}\r\n          {shapes.map((shape) => {\r\n            if (shape.type === 'line') {\r\n              return (\r\n                <Line\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  points={[shape.x, shape.y, shape.x + shape.width, shape.y + shape.height]}\r\n                  stroke={shape.color || selectedColor}\r\n                  strokeWidth={shape.strokeWidth || selectedStrokeWidth}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => setSelectedId(shape.id)}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            } else if (shape.type === 'rectangle') {\r\n              return (\r\n                <Rect\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  x={shape.x}\r\n                  y={shape.y}\r\n                  width={shape.width}\r\n                  height={shape.height}\r\n                  rotation={shape.rotation}\r\n                  stroke={shape.color || selectedColor}\r\n                  strokeWidth={shape.strokeWidth || selectedStrokeWidth}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => tool === 'select' && setSelectedId(shape.id)}\r\n                  onDragEnd={handleDragEnd}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            } else if (shape.type === 'circle') {\r\n              return (\r\n                <Circle\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  x={shape.x + shape.width / 2}\r\n                  y={shape.y + shape.height / 2}\r\n                  radius={Math.abs(shape.width) / 2}\r\n                  stroke={shape.color || selectedColor}\r\n                  strokeWidth={shape.strokeWidth || selectedStrokeWidth}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => tool === 'select' && setSelectedId(shape.id)}\r\n                  onDragEnd={handleDragEnd}\r\n                  onTransformEnd={handleTransformEnd}\r\n                  rotation={shape.rotation}\r\n                />\r\n              );\r\n            } else if (shape.type === 'image') {\r\n              const imageObj = new window.Image();\r\n              imageObj.crossOrigin = 'anonymous';\r\n              imageObj.src = shape.image;\r\n              return (\r\n                <Image\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  image={imageObj}\r\n                  x={shape.x}\r\n                  y={shape.y}\r\n                  width={shape.width}\r\n                  height={shape.height}\r\n                  rotation={shape.rotation}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => tool === 'select' && setSelectedId(shape.id)}\r\n                  onDragEnd={handleDragEnd}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n          {selectedId && tool === 'select' && (\r\n            <Transformer\r\n              ref={transformerRef}\r\n              boundBoxFunc={(oldBox, newBox) => {\r\n                const isValid = newBox.width > 5 && newBox.height > 5;\r\n                return isValid ? newBox : oldBox;\r\n              }}\r\n              rotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\r\n              enabledAnchors={[\r\n                'top-left', 'top-center', 'top-right',\r\n                'middle-left', 'middle-right',\r\n                'bottom-left', 'bottom-center', 'bottom-right'\r\n              ]}\r\n              anchorSize={8}\r\n              anchorCornerRadius={4}\r\n              borderStroke=\"#00ff00\"\r\n              anchorStroke=\"#00ff00\"\r\n              anchorFill=\"#ffffff\"\r\n              padding={5}\r\n            />\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Whiteboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}