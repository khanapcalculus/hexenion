{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\deepblue\\\\src\\\\components\\\\Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Stage, Layer, Line, Rect, Circle, Image, Transformer } from 'react-konva';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://192.168.31.158:3001', {\n  transports: ['websocket', 'polling'],\n  reconnectionDelay: 1000,\n  reconnectionAttempts: 10,\n  forceNew: true\n});\nconst Whiteboard = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const [shapes, setShapes] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [tool, setTool] = useState('pen'); // pen, eraser, line, rectangle, circle, select\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const transformerRef = useRef();\n  const stageRef = useRef();\n  useEffect(() => {\n    socket.on('draw-update', ({\n      lines,\n      shapes\n    }) => {\n      setLines(lines);\n      setShapes(shapes);\n    });\n    return () => {\n      socket.off('draw-update');\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedId) {\n      const shape = shapes.find(s => s.id === selectedId);\n      if (shape && transformerRef.current) {\n        transformerRef.current.nodes([stageRef.current.findOne('#' + selectedId)]);\n        transformerRef.current.getLayer().batchDraw();\n      }\n    }\n  }, [selectedId, shapes]);\n  const handleMouseDown = e => {\n    const pos = e.target.getStage().getPointerPosition();\n    setIsDrawing(true);\n    setStartPos(pos);\n    if (tool === 'pen') {\n      const newLines = [...lines, {\n        tool,\n        points: [pos.x, pos.y]\n      }];\n      setLines(newLines);\n      socket.emit('draw-update', {\n        lines: newLines,\n        shapes\n      });\n    } else if (tool === 'eraser') {\n      const newLines = [...lines, {\n        tool,\n        points: [pos.x, pos.y]\n      }];\n      setLines(newLines);\n      socket.emit('draw-update', {\n        lines: newLines,\n        shapes\n      });\n    } else if (tool === 'select') {\n      const clickedShape = e.target;\n      if (clickedShape === e.target.getStage()) {\n        setSelectedId(null);\n        return;\n      }\n      setSelectedId(clickedShape.id());\n    }\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    if (tool === 'pen' || tool === 'eraser') {\n      const lastLine = lines[lines.length - 1];\n      lastLine.points = lastLine.points.concat([point.x, point.y]);\n      const newLines = [...lines.slice(0, -1), lastLine];\n      setLines(newLines);\n      socket.emit('draw-update', {\n        lines: newLines,\n        shapes\n      });\n    } else if (['line', 'rectangle', 'circle'].includes(tool)) {\n      const newShapes = [...shapes];\n      const index = newShapes.findIndex(s => s.id === 'temp');\n      const shapeData = {\n        id: 'temp',\n        type: tool,\n        x: startPos.x,\n        y: startPos.y,\n        width: point.x - startPos.x,\n        height: point.y - startPos.y\n      };\n      if (index === -1) {\n        newShapes.push(shapeData);\n      } else {\n        newShapes[index] = shapeData;\n      }\n      setShapes(newShapes);\n      socket.emit('draw-update', {\n        lines,\n        shapes: newShapes\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    if (['line', 'rectangle', 'circle'].includes(tool)) {\n      const newShapes = shapes.map(shape => shape.id === 'temp' ? {\n        ...shape,\n        id: Date.now().toString()\n      } : shape);\n      setShapes(newShapes);\n      socket.emit('draw-update', {\n        lines,\n        shapes: newShapes\n      });\n    }\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const img = new window.Image();\n      img.src = reader.result;\n      img.onload = () => {\n        const newShape = {\n          id: Date.now().toString(),\n          type: 'image',\n          x: 50,\n          y: 50,\n          width: img.width,\n          height: img.height,\n          image: reader.result\n        };\n        setShapes([...shapes, newShape]);\n        socket.emit('draw-update', {\n          lines,\n          shapes: [...shapes, newShape]\n        });\n      };\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleTransformEnd = e => {\n    const node = e.target;\n    const newShapes = shapes.map(shape => shape.id === node.id() ? {\n      ...shape,\n      x: node.x(),\n      y: node.y(),\n      width: node.width() * node.scaleX(),\n      height: node.height() * node.scaleY(),\n      rotation: node.rotation()\n    } : shape);\n    setShapes(newShapes);\n    socket.emit('draw-update', {\n      lines,\n      shapes: newShapes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 10,\n        left: 10,\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('pen'),\n        children: \"Pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('eraser'),\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('line'),\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('rectangle'),\n        children: \"Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('circle'),\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('select'),\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setLines([]);\n          setShapes([]);\n          socket.emit('draw-update', {\n            lines: [],\n            shapes: []\n          });\n        },\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      ref: stageRef,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onTouchStart: handleMouseDown,\n      onTouchMove: handleMouseMove,\n      onTouchEnd: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: line.tool === 'eraser' ? '#ffffff' : '#000000',\n          strokeWidth: line.tool === 'eraser' ? 20 : 5,\n          tension: 0.5,\n          lineCap: \"round\",\n          lineJoin: \"round\",\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)), shapes.map(shape => {\n          if (shape.type === 'line') {\n            return /*#__PURE__*/_jsxDEV(Line, {\n              id: shape.id,\n              points: [shape.x, shape.y, shape.x + shape.width, shape.y + shape.height],\n              stroke: \"#000000\",\n              strokeWidth: 5,\n              draggable: tool === 'select',\n              onClick: () => setSelectedId(shape.id),\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this);\n          } else if (shape.type === 'rectangle') {\n            return /*#__PURE__*/_jsxDEV(Rect, {\n              id: shape.id,\n              x: shape.x,\n              y: shape.y,\n              width: shape.width,\n              height: shape.height,\n              stroke: \"#000000\",\n              strokeWidth: 5,\n              draggable: tool === 'select',\n              onClick: () => setSelectedId(shape.id),\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this);\n          } else if (shape.type === 'circle') {\n            return /*#__PURE__*/_jsxDEV(Circle, {\n              id: shape.id,\n              x: shape.x + shape.width / 2,\n              y: shape.y + shape.height / 2,\n              radius: Math.abs(shape.width) / 2,\n              stroke: \"#000000\",\n              strokeWidth: 5,\n              draggable: tool === 'select',\n              onClick: () => setSelectedId(shape.id),\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this);\n          } else if (shape.type === 'image') {\n            const imageObj = new window.Image();\n            imageObj.src = shape.image;\n            return /*#__PURE__*/_jsxDEV(Image, {\n              id: shape.id,\n              image: imageObj,\n              x: shape.x,\n              y: shape.y,\n              width: shape.width,\n              height: shape.height,\n              draggable: tool === 'select',\n              onClick: () => setSelectedId(shape.id),\n              onTransformEnd: handleTransformEnd\n            }, shape.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        }), selectedId && tool === 'select' && /*#__PURE__*/_jsxDEV(Transformer, {\n          ref: transformerRef,\n          boundBoxFunc: (oldBox, newBox) => {\n            return newBox;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"eh9DEfyUTkjNyeLSNNEu6KlgQrk=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Stage","Layer","Line","Rect","Circle","Image","Transformer","io","jsxDEV","_jsxDEV","socket","transports","reconnectionDelay","reconnectionAttempts","forceNew","Whiteboard","_s","lines","setLines","shapes","setShapes","selectedId","setSelectedId","tool","setTool","isDrawing","setIsDrawing","startPos","setStartPos","x","y","transformerRef","stageRef","on","off","shape","find","s","id","current","nodes","findOne","getLayer","batchDraw","handleMouseDown","e","pos","target","getStage","getPointerPosition","newLines","points","emit","clickedShape","handleMouseMove","stage","point","lastLine","length","concat","slice","includes","newShapes","index","findIndex","shapeData","type","width","height","push","handleMouseUp","map","Date","now","toString","handleImageUpload","file","files","reader","FileReader","onload","img","window","src","result","newShape","image","readAsDataURL","handleTransformEnd","node","scaleX","scaleY","rotation","children","style","position","top","left","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","ref","innerWidth","innerHeight","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","line","i","stroke","strokeWidth","tension","lineCap","lineJoin","globalCompositeOperation","draggable","onTransformEnd","radius","Math","abs","imageObj","boundBoxFunc","oldBox","newBox","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/deepblue/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Stage, Layer, Line, Rect, Circle, Image, Transformer } from 'react-konva';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://192.168.31.158:3001', {\r\n  transports: ['websocket', 'polling'],\r\n  reconnectionDelay: 1000,\r\n  reconnectionAttempts: 10,\r\n  forceNew: true\r\n});\r\n\r\nconst Whiteboard = () => {\r\n  const [lines, setLines] = useState([]);\r\n  const [shapes, setShapes] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [tool, setTool] = useState('pen'); // pen, eraser, line, rectangle, circle, select\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [startPos, setStartPos] = useState({ x: 0, y: 0 });\r\n  const transformerRef = useRef();\r\n  const stageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.on('draw-update', ({ lines, shapes }) => {\r\n      setLines(lines);\r\n      setShapes(shapes);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('draw-update');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      const shape = shapes.find(s => s.id === selectedId);\r\n      if (shape && transformerRef.current) {\r\n        transformerRef.current.nodes([stageRef.current.findOne('#' + selectedId)]);\r\n        transformerRef.current.getLayer().batchDraw();\r\n      }\r\n    }\r\n  }, [selectedId, shapes]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setIsDrawing(true);\r\n    setStartPos(pos);\r\n\r\n    if (tool === 'pen') {\r\n      const newLines = [...lines, { tool, points: [pos.x, pos.y] }];\r\n      setLines(newLines);\r\n      socket.emit('draw-update', { lines: newLines, shapes });\r\n    } else if (tool === 'eraser') {\r\n      const newLines = [...lines, { tool, points: [pos.x, pos.y] }];\r\n      setLines(newLines);\r\n      socket.emit('draw-update', { lines: newLines, shapes });\r\n    } else if (tool === 'select') {\r\n      const clickedShape = e.target;\r\n      if (clickedShape === e.target.getStage()) {\r\n        setSelectedId(null);\r\n        return;\r\n      }\r\n      setSelectedId(clickedShape.id());\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      const lastLine = lines[lines.length - 1];\r\n      lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n      const newLines = [...lines.slice(0, -1), lastLine];\r\n      setLines(newLines);\r\n      socket.emit('draw-update', { lines: newLines, shapes });\r\n    } else if (['line', 'rectangle', 'circle'].includes(tool)) {\r\n      const newShapes = [...shapes];\r\n      const index = newShapes.findIndex(s => s.id === 'temp');\r\n      const shapeData = {\r\n        id: 'temp',\r\n        type: tool,\r\n        x: startPos.x,\r\n        y: startPos.y,\r\n        width: point.x - startPos.x,\r\n        height: point.y - startPos.y,\r\n      };\r\n      \r\n      if (index === -1) {\r\n        newShapes.push(shapeData);\r\n      } else {\r\n        newShapes[index] = shapeData;\r\n      }\r\n      setShapes(newShapes);\r\n      socket.emit('draw-update', { lines, shapes: newShapes });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n    if (['line', 'rectangle', 'circle'].includes(tool)) {\r\n      const newShapes = shapes.map(shape => \r\n        shape.id === 'temp' ? { ...shape, id: Date.now().toString() } : shape\r\n      );\r\n      setShapes(newShapes);\r\n      socket.emit('draw-update', { lines, shapes: newShapes });\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const img = new window.Image();\r\n      img.src = reader.result;\r\n      img.onload = () => {\r\n        const newShape = {\r\n          id: Date.now().toString(),\r\n          type: 'image',\r\n          x: 50,\r\n          y: 50,\r\n          width: img.width,\r\n          height: img.height,\r\n          image: reader.result,\r\n        };\r\n        setShapes([...shapes, newShape]);\r\n        socket.emit('draw-update', { lines, shapes: [...shapes, newShape] });\r\n      };\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleTransformEnd = (e) => {\r\n    const node = e.target;\r\n    const newShapes = shapes.map(shape => \r\n      shape.id === node.id() ? {\r\n        ...shape,\r\n        x: node.x(),\r\n        y: node.y(),\r\n        width: node.width() * node.scaleX(),\r\n        height: node.height() * node.scaleY(),\r\n        rotation: node.rotation(),\r\n      } : shape\r\n    );\r\n    setShapes(newShapes);\r\n    socket.emit('draw-update', { lines, shapes: newShapes });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: 'fixed', top: 10, left: 10, zIndex: 1 }}>\r\n        <button onClick={() => setTool('pen')}>Pen</button>\r\n        <button onClick={() => setTool('eraser')}>Eraser</button>\r\n        <button onClick={() => setTool('line')}>Line</button>\r\n        <button onClick={() => setTool('rectangle')}>Rectangle</button>\r\n        <button onClick={() => setTool('circle')}>Circle</button>\r\n        <button onClick={() => setTool('select')}>Select</button>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n        <button onClick={() => {\r\n          setLines([]);\r\n          setShapes([]);\r\n          socket.emit('draw-update', { lines: [], shapes: [] });\r\n        }}>Clear All</button>\r\n      </div>\r\n      <Stage\r\n        ref={stageRef}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onTouchMove={handleMouseMove}\r\n        onTouchEnd={handleMouseUp}\r\n      >\r\n        <Layer>\r\n          {lines.map((line, i) => (\r\n            <Line\r\n              key={i}\r\n              points={line.points}\r\n              stroke={line.tool === 'eraser' ? '#ffffff' : '#000000'}\r\n              strokeWidth={line.tool === 'eraser' ? 20 : 5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n              globalCompositeOperation={\r\n                line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n          {shapes.map((shape) => {\r\n            if (shape.type === 'line') {\r\n              return (\r\n                <Line\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  points={[shape.x, shape.y, shape.x + shape.width, shape.y + shape.height]}\r\n                  stroke=\"#000000\"\r\n                  strokeWidth={5}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => setSelectedId(shape.id)}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            } else if (shape.type === 'rectangle') {\r\n              return (\r\n                <Rect\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  x={shape.x}\r\n                  y={shape.y}\r\n                  width={shape.width}\r\n                  height={shape.height}\r\n                  stroke=\"#000000\"\r\n                  strokeWidth={5}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => setSelectedId(shape.id)}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            } else if (shape.type === 'circle') {\r\n              return (\r\n                <Circle\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  x={shape.x + shape.width / 2}\r\n                  y={shape.y + shape.height / 2}\r\n                  radius={Math.abs(shape.width) / 2}\r\n                  stroke=\"#000000\"\r\n                  strokeWidth={5}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => setSelectedId(shape.id)}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            } else if (shape.type === 'image') {\r\n              const imageObj = new window.Image();\r\n              imageObj.src = shape.image;\r\n              return (\r\n                <Image\r\n                  key={shape.id}\r\n                  id={shape.id}\r\n                  image={imageObj}\r\n                  x={shape.x}\r\n                  y={shape.y}\r\n                  width={shape.width}\r\n                  height={shape.height}\r\n                  draggable={tool === 'select'}\r\n                  onClick={() => setSelectedId(shape.id)}\r\n                  onTransformEnd={handleTransformEnd}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n          {selectedId && tool === 'select' && (\r\n            <Transformer\r\n              ref={transformerRef}\r\n              boundBoxFunc={(oldBox, newBox) => {\r\n                return newBox;\r\n              }}\r\n            />\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Whiteboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}