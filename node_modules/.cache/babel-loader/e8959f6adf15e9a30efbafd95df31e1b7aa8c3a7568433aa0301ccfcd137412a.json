{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\deepblue\\\\src\\\\components\\\\Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const handleMouseDown = e => {\n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, {\n      points: [pos.x, pos.y]\n    }]);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const lastLine = lines[lines.length - 1];\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n    setLines([...lines.slice(0, -1), lastLine]);\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    onMouseDown: handleMouseDown,\n    onMousemove: handleMouseMove,\n    onMouseup: handleMouseUp,\n    onTouchStart: handleMouseDown,\n    onTouchMove: handleMouseMove,\n    onTouchEnd: handleMouseUp,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n        points: line.points,\n        stroke: \"#000000\",\n        strokeWidth: 5,\n        tension: 0.5,\n        lineCap: \"round\",\n        lineJoin: \"round\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"YHC2HtYHKTLeLuXKBiqByyK7jEI=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useState","Stage","Layer","Line","jsxDEV","_jsxDEV","Whiteboard","_s","lines","setLines","isDrawing","setIsDrawing","handleMouseDown","e","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","lastLine","length","concat","slice","handleMouseUp","width","window","innerWidth","height","innerHeight","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","children","map","line","i","stroke","strokeWidth","tension","lineCap","lineJoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/deepblue/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Stage, Layer, Line } from 'react-konva';\r\n\r\nconst Whiteboard = () => {\r\n  const [lines, setLines] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  const handleMouseDown = (e) => {\r\n    setIsDrawing(true);\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setLines([...lines, { points: [pos.x, pos.y] }]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n    const lastLine = lines[lines.length - 1];\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n\r\n    setLines([...lines.slice(0, -1), lastLine]);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  return (\r\n    <Stage\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      onMouseDown={handleMouseDown}\r\n      onMousemove={handleMouseMove}\r\n      onMouseup={handleMouseUp}\r\n      onTouchStart={handleMouseDown}\r\n      onTouchMove={handleMouseMove}\r\n      onTouchEnd={handleMouseUp}\r\n    >\r\n      <Layer>\r\n        {lines.map((line, i) => (\r\n          <Line\r\n            key={i}\r\n            points={line.points}\r\n            stroke=\"#000000\"\r\n            strokeWidth={5}\r\n            tension={0.5}\r\n            lineCap=\"round\"\r\n            lineJoin=\"round\"\r\n          />\r\n        ))}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Whiteboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,eAAe,GAAIC,CAAC,IAAK;IAC7BF,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMG,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;IACpDR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEU,MAAM,EAAE,CAACJ,GAAG,CAACK,CAAC,EAAEL,GAAG,CAACM,CAAC;IAAE,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMC,eAAe,GAAIR,CAAC,IAAK;IAC7B,IAAI,CAACH,SAAS,EAAE;IAEhB,MAAMY,KAAK,GAAGT,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,CAAC;IACjC,MAAMO,KAAK,GAAGD,KAAK,CAACL,kBAAkB,CAAC,CAAC;IACxC,MAAMO,QAAQ,GAAGhB,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC;IACxCD,QAAQ,CAACN,MAAM,GAAGM,QAAQ,CAACN,MAAM,CAACQ,MAAM,CAAC,CAACH,KAAK,CAACJ,CAAC,EAAEI,KAAK,CAACH,CAAC,CAAC,CAAC;IAE5DX,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACmB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEH,QAAQ,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA,CAACJ,KAAK;IACJ4B,KAAK,EAAEC,MAAM,CAACC,UAAW;IACzBC,MAAM,EAAEF,MAAM,CAACG,WAAY;IAC3BC,WAAW,EAAEtB,eAAgB;IAC7BuB,WAAW,EAAEd,eAAgB;IAC7Be,SAAS,EAAER,aAAc;IACzBS,YAAY,EAAEzB,eAAgB;IAC9B0B,WAAW,EAAEjB,eAAgB;IAC7BkB,UAAU,EAAEX,aAAc;IAAAY,QAAA,eAE1BnC,OAAA,CAACH,KAAK;MAAAsC,QAAA,EACHhC,KAAK,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACjBtC,OAAA,CAACF,IAAI;QAEHe,MAAM,EAAEwB,IAAI,CAACxB,MAAO;QACpB0B,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAE,CAAE;QACfC,OAAO,EAAE,GAAI;QACbC,OAAO,EAAC,OAAO;QACfC,QAAQ,EAAC;MAAO,GANXL,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAC7C,EAAA,CAnDID,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}